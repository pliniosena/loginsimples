Esse erro ocorre porque seu reposit√≥rio local est√° usando o nome de branch **`master`**, mas voc√™ est√° tentando fazer push para uma branch chamada **`main`** (que √© o padr√£o atual do GitHub). Vamos resolver isso!

---

### **Solu√ß√£o Passo a Passo**

#### **1. Verifique as branches existentes no seu reposit√≥rio local**
Execute no terminal:
```bash
git branch
```
- Se aparecer `* master`, significa que sua branch principal se chama **`master`** (antigo padr√£o do Git).  
- Se aparecer `* main`, ent√£o o problema √© outro (pule para o passo 3).

---

#### **2. Renomeie a branch `master` para `main` (se necess√°rio)**
Se sua branch principal ainda se chama `master`, vamos atualiz√°-la para `main`:
```bash
git branch -M main  # Renomeia a branch 'master' para 'main'
```

---

#### **3. Configure o upstream (vincula√ß√£o com o GitHub)**
Agora fa√ßa o push corretamente:
```bash
git push -u origin main
```
- O `-u` faz com que a branch local `main` "aponte" para a branch remota `origin/main`.

---

#### **Se ainda n√£o funcionar...**
##### **(A) Seu reposit√≥rio GitHub est√° vazio?**
- Se voc√™ **acabou de criar o reposit√≥rio no GitHub**, pode ser que n√£o tenha uma branch `main` l√° ainda.  
- Execute:
  ```bash
  git push -u origin main
  ```
  (Isso criar√° a branch `main` remotamente.)

##### **(B) Seu reposit√≥rio GitHub j√° tem commits?**
- Se algu√©m j√° fez commits no GitHub, fa√ßa primeiro um `git pull`:
  ```bash
  git pull origin main --allow-unrelated-histories
  ```

---

### **Resumo dos Comandos**
1. **Renomear branch** (se necess√°rio):
   ```bash
   git branch -M main
   ```
2. **Fazer push corretamente**:
   ```bash
   git push -u origin main
   ```

---

### **Por que isso acontece?**
- Antigamente, o Git usava `master` como branch padr√£o, mas o GitHub mudou para `main` por quest√µes de inclusividade.  
- Se seu Git √© mais antigo, ele ainda cria branches `master` por padr√£o.

---

### **Dica para o Futuro**
Sempre verifique:
- O nome da branch local (`git branch`).  
- O nome da branch remota (no GitHub).  

Se os nomes n√£o baterem, voc√™ pode:
- Renomear a branch local (`git branch -M novo-nome`).  
- Ou fazer push para a branch correta (`git push origin nome-da-branch`).

---

Teste agora e me diz se funcionou! Se ainda der erro, me avise que ajudo a ajustar. üòä
 